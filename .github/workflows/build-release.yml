name: Build and Release Binary

on:
  push:
    tags:
      - 'v*'  # Trigger on version tags like v1.0.0
  workflow_dispatch:  # Allow manual triggering

permissions:
  contents: write  # Required for creating releases
  actions: read    # Required for downloading artifacts

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            asset_name: wrtr-linux
          - os: windows-latest
            asset_name: wrtr-windows.exe
          - os: macos-latest
            asset_name: wrtr-macos

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
    
    - name: Build binary
      run: |
        pyinstaller main.spec
    
    # Package Linux binary
    - name: Package Linux binary
      if: runner.os == 'Linux'
      run: |
        mv dist/main dist/${{ matrix.asset_name }}
        chmod +x dist/${{ matrix.asset_name }}
        tar -czf dist/${{ matrix.asset_name }}.tar.gz -C dist ${{ matrix.asset_name }}
        ls -la dist/${{ matrix.asset_name }}.tar.gz
        file dist/${{ matrix.asset_name }}.tar.gz

    # Package macOS binary
    - name: Package macOS binary
      if: runner.os == 'macOS'
      run: |
        mv dist/main dist/${{ matrix.asset_name }}
        chmod +x dist/${{ matrix.asset_name }}
        zip -j dist/${{ matrix.asset_name }}.zip dist/${{ matrix.asset_name }}
        ls -la dist/${{ matrix.asset_name }}.zip
        file dist/${{ matrix.asset_name }}.zip
    
    - name: Package Windows binary
      if: runner.os == 'Windows'
      run: |
        move dist\main.exe dist\${{ matrix.asset_name }}
        powershell -Command "Compress-Archive -Path dist\${{ matrix.asset_name }} -DestinationPath dist\${{ matrix.asset_name }}.zip"
        dir dist\${{ matrix.asset_name }}.zip
    
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.asset_name }}
        path: |
          dist/*.tar.gz
          dist/*.zip

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
    
    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        files: |
          */wrtr-linux.tar.gz
          */wrtr-windows.zip
          */wrtr-macos.zip
        draft: false
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
